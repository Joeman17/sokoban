"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _MAP_TO_NUM;

exports.isTransparentTile = isTransparentTile;
exports.isMovableTile = isMovableTile;
exports.isWalkableTile = isWalkableTile;
exports.extractMovableTile = extractMovableTile;
exports.removeMovableTile = removeMovableTile;
exports.addMovableTile = addMovableTile;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var WALL = exports.WALL = "#";
var PLAYER = exports.PLAYER = "@";
var PLAYER_GOAL = exports.PLAYER_GOAL = "+";
var BOX = exports.BOX = "$";
var BOX_GOAL = exports.BOX_GOAL = "*";
var GOAL = exports.GOAL = ".";
var FLOOR = exports.FLOOR = " ";

var BOX_NO = 1;
var PLAYER_NO = 2;
var GOAL_NO = 4;
var MAP_TO_NUM = (_MAP_TO_NUM = {}, _defineProperty(_MAP_TO_NUM, FLOOR, 0), _defineProperty(_MAP_TO_NUM, PLAYER, PLAYER_NO), _defineProperty(_MAP_TO_NUM, PLAYER_GOAL, PLAYER_NO | GOAL_NO), _defineProperty(_MAP_TO_NUM, BOX, BOX_NO), _defineProperty(_MAP_TO_NUM, BOX_GOAL, BOX_NO | GOAL_NO), _defineProperty(_MAP_TO_NUM, GOAL, GOAL_NO), _MAP_TO_NUM);
var MAP_FROM_NUM = Object.keys(MAP_TO_NUM).reduce(function (obj, key) {
  return obj[MAP_TO_NUM[key]] = key, obj;
}, {});

function isTransparentTile(tile) {
  return tile !== WALL;
}

function isMovableTile(tile) {
  return !(tile === FLOOR || tile === WALL || tile === GOAL);
}

function isWalkableTile(tile) {
  return tile === FLOOR || tile === GOAL;
}

function extractMovableTile(tile) {
  var num = MAP_TO_NUM[tile];

  if (!num) {
    return null;
  }

  var res = MAP_FROM_NUM[num & PLAYER_NO || num & BOX_NO];
  return res === FLOOR ? null : res;
}

function removeMovableTile(tile) {
  var num = MAP_TO_NUM[tile];

  if (!num) {
    return tile;
  }

  return num & GOAL_NO ? GOAL : FLOOR;
}

function addMovableTile(tile, movable) {
  var tileNum = MAP_TO_NUM[tile];
  var movableNum = MAP_TO_NUM[movable];

  if (tileNum === undefined || movableNum === undefined) {
    return tile;
  }

  return MAP_FROM_NUM[tileNum | movableNum];
}
//# sourceMappingURL=tiles.js.map