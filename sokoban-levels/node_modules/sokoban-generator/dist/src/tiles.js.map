{"version":3,"sources":["../../src/tiles.js"],"names":["isTransparentTile","isMovableTile","isWalkableTile","extractMovableTile","removeMovableTile","addMovableTile","WALL","PLAYER","PLAYER_GOAL","BOX","BOX_GOAL","GOAL","FLOOR","BOX_NO","PLAYER_NO","GOAL_NO","MAP_TO_NUM","MAP_FROM_NUM","Object","keys","reduce","obj","key","tile","num","res","movable","tileNum","movableNum","undefined"],"mappings":";;;;;;;;QAsBgBA,iB,GAAAA,iB;QAIAC,a,GAAAA,a;QAIAC,c,GAAAA,c;QAIAC,kB,GAAAA,kB;QAWAC,iB,GAAAA,iB;QAUAC,c,GAAAA,c;;;;AAvDT,IAAMC,sBAAO,GAAb;AACA,IAAMC,0BAAS,GAAf;AACA,IAAMC,oCAAc,GAApB;AACA,IAAMC,oBAAM,GAAZ;AACA,IAAMC,8BAAW,GAAjB;AACA,IAAMC,sBAAO,GAAb;AACA,IAAMC,wBAAQ,GAAd;;AAEP,IAAMC,SAAS,CAAf;AACA,IAAMC,YAAY,CAAlB;AACA,IAAMC,UAAU,CAAhB;AACA,IAAMC,6DACHJ,KADG,EACW,CADX,gCAEHL,MAFG,EAEWO,SAFX,gCAGHN,WAHG,EAGWM,YAAYC,OAHvB,gCAIHN,GAJG,EAIWI,MAJX,gCAKHH,QALG,EAKWG,SAASE,OALpB,gCAMHJ,IANG,EAMWI,OANX,eAAN;AAQA,IAAME,eAAeC,OAAOC,IAAP,CAAYH,UAAZ,EAClBI,MADkB,CACX,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAeD,IAAIL,WAAWM,GAAX,CAAJ,IAAuBA,GAAvB,EAA4BD,GAA3C;AAAA,CADW,EACsC,EADtC,CAArB;;AAGO,SAASrB,iBAAT,CAA2BuB,IAA3B,EAAiC;AACtC,SAAOA,SAASjB,IAAhB;AACD;;AAEM,SAASL,aAAT,CAAuBsB,IAAvB,EAA6B;AAClC,SAAO,EAAEA,SAASX,KAAT,IAAkBW,SAASjB,IAA3B,IAAmCiB,SAASZ,IAA9C,CAAP;AACD;;AAEM,SAAST,cAAT,CAAwBqB,IAAxB,EAA8B;AACnC,SAAOA,SAASX,KAAT,IAAkBW,SAASZ,IAAlC;AACD;;AAEM,SAASR,kBAAT,CAA4BoB,IAA5B,EAAkC;AACvC,MAAIC,MAAMR,WAAWO,IAAX,CAAV;;AAEA,MAAI,CAACC,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAED,MAAIC,MAAMR,aAAcO,MAAMV,SAAP,IAAsBU,MAAMX,MAAzC,CAAV;AACA,SAAOY,QAAQb,KAAR,GAAgB,IAAhB,GAAuBa,GAA9B;AACD;;AAEM,SAASrB,iBAAT,CAA2BmB,IAA3B,EAAiC;AACtC,MAAIC,MAAMR,WAAWO,IAAX,CAAV;;AAEA,MAAI,CAACC,GAAL,EAAU;AACR,WAAOD,IAAP;AACD;;AAED,SAAQC,MAAMT,OAAP,GAAkBJ,IAAlB,GAAyBC,KAAhC;AACD;;AAEM,SAASP,cAAT,CAAwBkB,IAAxB,EAA8BG,OAA9B,EAAuC;AAC5C,MAAIC,UAAUX,WAAWO,IAAX,CAAd;AACA,MAAIK,aAAaZ,WAAWU,OAAX,CAAjB;;AAEA,MAAIC,YAAYE,SAAZ,IAAyBD,eAAeC,SAA5C,EAAuD;AACrD,WAAON,IAAP;AACD;;AAED,SAAON,aAAaU,UAAUC,UAAvB,CAAP;AACD","file":"tiles.js","sourcesContent":["export const WALL = \"#\";\r\nexport const PLAYER = \"@\";\r\nexport const PLAYER_GOAL = \"+\";\r\nexport const BOX = \"$\";\r\nexport const BOX_GOAL = \"*\";\r\nexport const GOAL = \".\";\r\nexport const FLOOR = \" \";\r\n\r\nconst BOX_NO = 1;\r\nconst PLAYER_NO = 2;\r\nconst GOAL_NO = 4;\r\nconst MAP_TO_NUM = {\r\n  [FLOOR]      : 0,\r\n  [PLAYER]     : PLAYER_NO,\r\n  [PLAYER_GOAL]: PLAYER_NO | GOAL_NO,\r\n  [BOX]        : BOX_NO,\r\n  [BOX_GOAL]   : BOX_NO | GOAL_NO,\r\n  [GOAL]       : GOAL_NO,\r\n};\r\nconst MAP_FROM_NUM = Object.keys(MAP_TO_NUM)\r\n  .reduce((obj, key) => (obj[MAP_TO_NUM[key]] = key, obj), {});\r\n\r\nexport function isTransparentTile(tile) {\r\n  return tile !== WALL;\r\n}\r\n\r\nexport function isMovableTile(tile) {\r\n  return !(tile === FLOOR || tile === WALL || tile === GOAL);\r\n}\r\n\r\nexport function isWalkableTile(tile) {\r\n  return tile === FLOOR || tile === GOAL;\r\n}\r\n\r\nexport function extractMovableTile(tile) {\r\n  let num = MAP_TO_NUM[tile];\r\n\r\n  if (!num) {\r\n    return null;\r\n  }\r\n\r\n  let res = MAP_FROM_NUM[(num & PLAYER_NO) || (num & BOX_NO)];\r\n  return res === FLOOR ? null : res;\r\n}\r\n\r\nexport function removeMovableTile(tile) {\r\n  let num = MAP_TO_NUM[tile];\r\n\r\n  if (!num) {\r\n    return tile;\r\n  }\r\n\r\n  return (num & GOAL_NO) ? GOAL : FLOOR;\r\n}\r\n\r\nexport function addMovableTile(tile, movable) {\r\n  let tileNum = MAP_TO_NUM[tile];\r\n  let movableNum = MAP_TO_NUM[movable];\r\n\r\n  if (tileNum === undefined || movableNum === undefined) {\r\n    return tile;\r\n  }\r\n\r\n  return MAP_FROM_NUM[tileNum | movableNum];\r\n}"]}