{"version":3,"sources":["../index.js"],"names":["generateSokobanLevel","parameters","width","height","boxes","minWalls","attempts","seed","Date","now","initialPosition","type","grid","applyTemplates","isGoodCandidate","redeployGoals","generateFarthestBoxes","toReadableString","console","warn"],"mappings":";;;;;QAEgBA,oB,GAAAA,oB;;AAFhB;;;;;;AAEO,SAASA,oBAAT,GAA+C;AAAA,MAAjBC,UAAiB,uEAAJ,EAAI;AAAA,0BAUhDA,UAVgD,CAElDC,KAFkD;AAAA,MAElDA,KAFkD,qCAE1C,CAF0C;AAAA,2BAUhDD,UAVgD,CAGlDE,MAHkD;AAAA,MAGlDA,MAHkD,sCAGzC,CAHyC;AAAA,0BAUhDF,UAVgD,CAIlDG,KAJkD;AAAA,MAIlDA,KAJkD,qCAI1C,CAJ0C;AAAA,6BAUhDH,UAVgD,CAKlDI,QALkD;AAAA,MAKlDA,QALkD,wCAKvC,EALuC;AAAA,6BAUhDJ,UAVgD,CAMlDK,QANkD;AAAA,MAMlDA,QANkD,wCAMvC,IANuC;AAAA,yBAUhDL,UAVgD,CAOlDM,IAPkD;AAAA,MAOlDA,IAPkD,oCAO3CC,KAAKC,GAAL,EAP2C;AAAA,MAQlDC,eARkD,GAUhDT,UAVgD,CAQlDS,eARkD;AAAA,yBAUhDT,UAVgD,CASlDU,IATkD;AAAA,MASlDA,IATkD,oCAS3C,QAT2C;;;AAYpD,MAAIC,OAAO,mBAASV,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BG,IAA/B,EAAqCF,QAArC,EAA+CK,eAA/C,CAAX;;AAEA,SAAO,EAAEJ,QAAF,GAAa,CAApB,EAAuB;AACrB,QAAI,CAACM,KAAKC,cAAL,EAAD,IACC,CAACD,KAAKE,eAAL,EADF,IAEC,CAACF,KAAKG,aAAL,EAFF,IAGC,CAACH,KAAKI,qBAAL,EAHN,EAGoC;AAClC;AACD;;AAED,QAAIL,SAAS,QAAb,EAAuB;AACrB,aAAOC,KAAKK,gBAAL,EAAP;AACD;;AAED,QAAIN,SAAS,OAAb,EAAsB;AACpB,aAAOC,IAAP;AACD;;AAEDM,YAAQC,IAAR,qFAA6FR,IAA7F;AACA,WAAOC,KAAKK,gBAAL,EAAP;AACD;;AAED,SAAO,IAAP;AACD","file":"index.js","sourcesContent":["import Grid from \"./src/grid\";\r\n\r\nexport function generateSokobanLevel(parameters = {}) {\r\n  let {\r\n    width = 9,\r\n    height = 9,\r\n    boxes = 3,\r\n    minWalls = 13,\r\n    attempts = 5000,\r\n    seed = Date.now(),\r\n    initialPosition,\r\n    type = \"string\",\r\n  } = parameters;\r\n\r\n  let grid = new Grid(width, height, boxes, seed, minWalls, initialPosition);\r\n\r\n  while (--attempts > 0) {\r\n    if (!grid.applyTemplates()\r\n      || !grid.isGoodCandidate()\r\n      || !grid.redeployGoals()\r\n      || !grid.generateFarthestBoxes()) {\r\n      continue;\r\n    }\r\n\r\n    if (type === \"string\") {\r\n      return grid.toReadableString();\r\n    }\r\n\r\n    if (type === \"class\") {\r\n      return grid;\r\n    }\r\n\r\n    console.warn(`sokoban-generator/generateSokobanLevel: Unrecognized value for key \"string\": ${type}. It should be either \"string\" or \"class`);\r\n    return grid.toReadableString();\r\n  }\r\n\r\n  return null;\r\n}"]}