{"version":3,"sources":["../../test/matrix.test.js"],"names":["describe","matrix","wall","floor","box","box_goal","player","player_goal","beforeEach","setAsArray","split","test","expect","move","toBeFalsy","get","toBe","pos","pos2","toBeTruthy","isWall","isAllConnected","hasLargeEmptySpace","hasDeadEnd","resetBoxesToGoals","toEqual","x","y","isAccessible","findAvailablePlayerPositions","length"],"mappings":"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","file":"matrix.test.js","sourcesContent":["import {\r\n  BOX,\r\n  BOX_GOAL,\r\n  FLOOR,\r\n  GOAL,\r\n  PLAYER,\r\n  PLAYER_GOAL,\r\n  WALL\r\n} from \"../src/tiles\";\r\nimport {DOWN, LEFT, RIGHT, UP} from \"../src/direction\";\r\nimport Matrix from \"../src/matrix\";\r\n\r\ndescribe(\"move\", () => {\r\n  let matrix = null;\r\n  const wall = [0, 0];\r\n  const floor = [1, 1];\r\n  const box = [2, 2];\r\n  const box_goal = [4, 4];\r\n  const player = [3, 3];\r\n  const player_goal = [5, 3];\r\n\r\n  describe(\"Move non-movable\", () => {\r\n    let matrix = null;\r\n\r\n    beforeEach(() => {\r\n      matrix = new Matrix(10, 10, 3);\r\n      matrix.setAsArray([\r\n        `##########`.split(\"\"),\r\n        `#       ##`.split(\"\"),\r\n        `# $ $ $  #`.split(\"\"),\r\n        `#  @ +   #`.split(\"\"),\r\n        `#   *    #`.split(\"\"),\r\n        `#  . .   #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `##########`.split(\"\")\r\n      ]);\r\n    });\r\n\r\n    test(\"Move floor\", () => {\r\n      expect(matrix.move(1, 1, RIGHT)).toBeFalsy();\r\n      expect(matrix.get(1, 1)).toBe(FLOOR);\r\n    });\r\n    test(\"Move goal\", () => {\r\n      expect(matrix.move(5, 5, DOWN)).toBeFalsy();\r\n      expect(matrix.get(5, 5)).toBe(GOAL);\r\n    });\r\n    test(\"Move wall\", () => {\r\n      expect(matrix.move(8, 1, LEFT)).toBeFalsy();\r\n      expect(matrix.get(8, 1)).toBe(WALL);\r\n    });\r\n  });\r\n\r\n  describe(\"Move box\", () => {\r\n    let matrix = null;\r\n    let pos = [3, 2];\r\n    let pos2 = [7, 0];\r\n\r\n    beforeEach(() => {\r\n      matrix = new Matrix(10, 10, 3);\r\n      matrix.setAsArray([\r\n        `#######$##`.split(\"\"),\r\n        `#  *    ##`.split(\"\"),\r\n        `# $$.    #`.split(\"\"),\r\n        `#  @     #`.split(\"\"),\r\n        `#   *    #`.split(\"\"),\r\n        `#  . .   #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `##########`.split(\"\")\r\n      ]);\r\n    });\r\n\r\n    test(\"Move to another box\", () => {\r\n      expect(matrix.move(...pos, LEFT)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX);\r\n    });\r\n    test(\"Move to another box on goal\", () => {\r\n      expect(matrix.move(...pos, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX);\r\n    });\r\n    test(\"Move to another goal\", () => {\r\n      expect(matrix.move(...pos, RIGHT)).toBeTruthy();\r\n      expect(matrix.get(...pos)).toBe(FLOOR);\r\n      expect(matrix.get(pos[0] + 1, pos[1])).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to another player\", () => {\r\n      expect(matrix.move(...pos, DOWN)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX);\r\n    });\r\n    test(\"Move to the edge\", () => {\r\n      expect(matrix.move(...pos2, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(BOX);\r\n    });\r\n    test(\"Move to the wall\", () => {\r\n      expect(matrix.move(...pos2, RIGHT)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(BOX);\r\n    });\r\n    test(\"Move to another floor\", () => {\r\n      expect(matrix.move(...pos2, DOWN)).toBeTruthy();\r\n      expect(matrix.get(...pos2)).toBe(FLOOR);\r\n      expect(matrix.get(pos2[0], pos2[1] + 1)).toBe(BOX);\r\n    });\r\n  });\r\n\r\n  describe(\"Move box on goal\", () => {\r\n    let matrix = null;\r\n    let pos = [3, 2];\r\n    let pos2 = [7, 0];\r\n\r\n    beforeEach(() => {\r\n      matrix = new Matrix(10, 10, 3);\r\n      matrix.setAsArray([\r\n        `#######*##`.split(\"\"),\r\n        `#  *    ##`.split(\"\"),\r\n        `# $*.    #`.split(\"\"),\r\n        `#  @     #`.split(\"\"),\r\n        `#   *    #`.split(\"\"),\r\n        `#  . .   #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `##########`.split(\"\")\r\n      ]);\r\n    });\r\n\r\n    test(\"Move to another box\", () => {\r\n      expect(matrix.move(...pos, LEFT)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to another box on goal\", () => {\r\n      expect(matrix.move(...pos, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to another goal\", () => {\r\n      expect(matrix.move(...pos, RIGHT)).toBeTruthy();\r\n      expect(matrix.get(...pos)).toBe(GOAL);\r\n      expect(matrix.get(pos[0] + 1, pos[1])).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to another player\", () => {\r\n      expect(matrix.move(...pos, DOWN)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to the edge\", () => {\r\n      expect(matrix.move(...pos2, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to the wall\", () => {\r\n      expect(matrix.move(...pos2, RIGHT)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(BOX_GOAL);\r\n    });\r\n    test(\"Move to another floor\", () => {\r\n      expect(matrix.move(...pos2, DOWN)).toBeTruthy();\r\n      expect(matrix.get(...pos2)).toBe(GOAL);\r\n      expect(matrix.get(pos2[0], pos2[1] + 1)).toBe(BOX);\r\n    });\r\n  });\r\n\r\n  describe(\"Move player\", () => {\r\n    let matrix = null;\r\n    let pos = [3, 2];\r\n    let pos2 = [7, 0];\r\n\r\n    beforeEach(() => {\r\n      matrix = new Matrix(10, 10, 3);\r\n      matrix.setAsArray([\r\n        `#######@##`.split(\"\"),\r\n        `#  *    ##`.split(\"\"),\r\n        `# $@.    #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#   *    #`.split(\"\"),\r\n        `#  . .   #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `##########`.split(\"\")\r\n      ]);\r\n    });\r\n\r\n    test(\"Move to another box\", () => {\r\n      expect(matrix.move(...pos, LEFT)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(PLAYER);\r\n    });\r\n    test(\"Move to another box on goal\", () => {\r\n      expect(matrix.move(...pos, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(PLAYER);\r\n    });\r\n    test(\"Move to another goal\", () => {\r\n      expect(matrix.move(...pos, RIGHT)).toBeTruthy();\r\n      expect(matrix.get(...pos)).toBe(FLOOR);\r\n      expect(matrix.get(pos[0] + 1, pos[1])).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to the edge\", () => {\r\n      expect(matrix.move(...pos2, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(PLAYER);\r\n    });\r\n    test(\"Move to the wall\", () => {\r\n      expect(matrix.move(...pos2, RIGHT)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(PLAYER);\r\n    });\r\n    test(\"Move to another floor\", () => {\r\n      expect(matrix.move(...pos2, DOWN)).toBeTruthy();\r\n      expect(matrix.get(...pos2)).toBe(FLOOR);\r\n      expect(matrix.get(pos2[0], pos2[1] + 1)).toBe(PLAYER);\r\n    });\r\n  });\r\n\r\n  describe(\"Move player on goal\", () => {\r\n    let matrix = null;\r\n    let pos = [3, 2];\r\n    let pos2 = [7, 0];\r\n\r\n    beforeEach(() => {\r\n      matrix = new Matrix(10, 10, 3);\r\n      matrix.setAsArray([\r\n        `#######+##`.split(\"\"),\r\n        `#  *    ##`.split(\"\"),\r\n        `# $+.    #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#   *    #`.split(\"\"),\r\n        `#  . .   #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `#        #`.split(\"\"),\r\n        `##########`.split(\"\")\r\n      ]);\r\n    });\r\n\r\n    test(\"Move to another box\", () => {\r\n      expect(matrix.move(...pos, LEFT)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to another box on goal\", () => {\r\n      expect(matrix.move(...pos, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos)).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to another goal\", () => {\r\n      expect(matrix.move(...pos, RIGHT)).toBeTruthy();\r\n      expect(matrix.get(...pos)).toBe(GOAL);\r\n      expect(matrix.get(pos[0] + 1, pos[1])).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to the edge\", () => {\r\n      expect(matrix.move(...pos2, UP)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to the wall\", () => {\r\n      expect(matrix.move(...pos2, RIGHT)).toBeFalsy();\r\n      expect(matrix.get(...pos2)).toBe(PLAYER_GOAL);\r\n    });\r\n    test(\"Move to another floor\", () => {\r\n      expect(matrix.move(...pos2, DOWN)).toBeTruthy();\r\n      expect(matrix.get(...pos2)).toBe(GOAL);\r\n      expect(matrix.get(pos2[0], pos2[1] + 1)).toBe(PLAYER);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe(\"isWall\", () => {\r\n  test(\"Solid wall\", () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    // Out of bounds\r\n    expect(matrix.isWall(-1, -2)).toBeTruthy();\r\n    expect(matrix.isWall(2, 12)).toBeTruthy();\r\n    expect(matrix.isWall(-2, 2)).toBeTruthy();\r\n    expect(matrix.isWall(2, -2)).toBeTruthy();\r\n\r\n    // In bounds\r\n    expect(matrix.isWall(0, 0)).toBeTruthy();\r\n    expect(matrix.isWall(0, 2)).toBeTruthy();\r\n    expect(matrix.isWall(0, 9)).toBeTruthy();\r\n    expect(matrix.isWall(1, 0)).toBeTruthy();\r\n    expect(matrix.isWall(2, 9)).toBeTruthy();\r\n    expect(matrix.isWall(9, 0)).toBeTruthy();\r\n    expect(matrix.isWall(9, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(\"Solid floor\", () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    // Out of bounds\r\n    expect(matrix.isWall(-1, -2)).toBeTruthy();\r\n    expect(matrix.isWall(2, 12)).toBeTruthy();\r\n    expect(matrix.isWall(-2, 2)).toBeTruthy();\r\n    expect(matrix.isWall(2, -2)).toBeTruthy();\r\n\r\n    // In bounds\r\n    expect(matrix.isWall(0, 0)).toBeFalsy();\r\n    expect(matrix.isWall(0, 2)).toBeFalsy();\r\n    expect(matrix.isWall(0, 9)).toBeFalsy();\r\n    expect(matrix.isWall(1, 0)).toBeFalsy();\r\n    expect(matrix.isWall(2, 9)).toBeFalsy();\r\n    expect(matrix.isWall(9, 0)).toBeFalsy();\r\n    expect(matrix.isWall(9, 9)).toBeFalsy();\r\n  });\r\n});\r\n\r\ndescribe(\"isAllConnected\", () => {\r\n  test(`Completely no place to go`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeFalsy();\r\n  });\r\n\r\n  test(`Completely empty`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeTruthy();\r\n  });\r\n\r\n  test(`One empty spot`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeTruthy();\r\n  });\r\n\r\n  test(`Two empty spots`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###### ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeFalsy();\r\n  });\r\n\r\n  test(`Zig-zag`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `#   #   ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# # # # ##`.split(\"\"),\r\n      `# #   # ##`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeTruthy();\r\n  });\r\n\r\n  test(`Almost adjacent empty spots`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `#####   ##`.split(\"\"),\r\n      `#####   ##`.split(\"\"),\r\n      `#####   ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAllConnected()).toBeFalsy();\r\n  });\r\n});\r\n\r\ndescribe(\"hasLargeEmptySpace\", () => {\r\n  test(`Solid wall`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Solid floor`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n\r\n  test(`One dot`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`One line`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Two lines`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`3x3`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`3x3 with a dot`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Zigzag 3x4`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `##    ####`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Zigzag 4x3`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `### ######`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `##### ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Space with a wall`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `### #  ###`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Larger space with a wall`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#   #   ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Corner 3x3`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#######   `.split(\"\"),\r\n      `#######   `.split(\"\"),\r\n      `#######   `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeFalsy();\r\n  });\r\n\r\n  test(`Corner 4x3`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `   #######`.split(\"\"),\r\n      `   #######`.split(\"\"),\r\n      `   #######`.split(\"\"),\r\n      `   #######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n\r\n  test(`Corner 3x4`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `    ######`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n\r\n  test(`4x3`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n\r\n  test(`3x4`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n\r\n  test(`Overlapped`, () => {\r\n    let matrix = new Matrix(10, 10);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `###      #`.split(\"\"),\r\n      `###      #`.split(\"\"),\r\n      `#####    #`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasLargeEmptySpace()).toBeTruthy();\r\n  });\r\n});\r\n\r\ndescribe(\"hasDeadEnd\", () => {\r\n  test(`Solid wall`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeFalsy();\r\n  });\r\n\r\n  test(`Solid floor`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeFalsy();\r\n  });\r\n\r\n  test(`One dot`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Square in the middle`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeFalsy();\r\n  });\r\n\r\n  test(`Square in the middle with a dot at bottom`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Square in the middle with a dot at top`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##### ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Square in the middle with a dot at left`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###   ####`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Square in the middle with a dot at right`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####  ####`.split(\"\"),\r\n      `####   ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Vertical line`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Horizontal line`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##     ###`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Cross`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeFalsy();\r\n  });\r\n\r\n  test(`Cross with a dot`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `###  # ###`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `###  #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end at corner (top right)`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `######### `.split(\"\"),\r\n      `#######   `.split(\"\"),\r\n      `#######   `.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end at corner (top left)`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      ` #########`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end at corner (bottom left)`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      `    ######`.split(\"\"),\r\n      ` #########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end at corner (bottom right)`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `######  ##`.split(\"\"),\r\n      `######  ##`.split(\"\"),\r\n      `######  ##`.split(\"\"),\r\n      `######    `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end on left edge`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `     #####`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end on top edge`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `#### #####`.split(\"\"),\r\n      `##    ####`.split(\"\"),\r\n      `##    ####`.split(\"\"),\r\n      `##    ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end on right edge`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#####     `.split(\"\"),\r\n      `#####    #`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n\r\n  test(`Dead end on bottom edge`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `###    ###`.split(\"\"),\r\n      `##### ####`.split(\"\"),\r\n      `##### ####`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.hasDeadEnd()).toBeTruthy();\r\n  });\r\n});\r\n\r\ndescribe(\"resetBoxesToGoals\", () => {\r\n  test(`Already there`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `#*  ######`.split(\"\"),\r\n      `# * ######`.split(\"\"),\r\n      `#  *######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.resetBoxesToGoals())\r\n      .toEqual([{x: 1, y: 1}, {x: 2, y: 2}, {x: 3, y: 3}]);\r\n  });\r\n\r\n  test(`Partially there`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `#*  ######`.split(\"\"),\r\n      `# . ######`.split(\"\"),\r\n      `#$ *######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.resetBoxesToGoals())\r\n      .toEqual([{x: 1, y: 1}, {x: 2, y: 2}, {x: 3, y: 3}]);\r\n  });\r\n\r\n  test(`None there`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `#.  ######`.split(\"\"),\r\n      `#$.$######`.split(\"\"),\r\n      `#$ .######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.resetBoxesToGoals())\r\n      .toEqual([{x: 1, y: 1}, {x: 2, y: 2}, {x: 3, y: 3}]);\r\n  });\r\n});\r\n\r\ndescribe(\"isAccessible\", () => {\r\n  test(`On wall`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 9, 9)).toBeFalsy();\r\n  });\r\n\r\n  test(`Out of bounds`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, -2, 9, 9)).toBeFalsy();\r\n  });\r\n\r\n  test(`On wall but same position`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 0, 0)).toBeFalsy();\r\n  });\r\n\r\n  test(`On floor with same position`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 0, 0)).toBeTruthy();\r\n  });\r\n\r\n  test(`Solid floor`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 9, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(`Direct top`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 9, 0)).toBeTruthy();\r\n  });\r\n\r\n  test(`Direct left`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      ` #########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 0, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(`Direct bottom`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 9, 9, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(`Direct right`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `######### `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(9, 0, 9, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(`Blocked`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `    ##    `.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 9, 0)).toBeFalsy();\r\n  });\r\n\r\n  test(`Zig-zag`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `######### `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `######### `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(0, 0, 9, 9)).toBeTruthy();\r\n  });\r\n\r\n  test(`Bounded wall`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `#       ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.isAccessible(3, 3, 5, 5)).toBeTruthy();\r\n  });\r\n});\r\n\r\ndescribe(\"findAvailablePlayerPositions\", () => {\r\n  test(`Solid wall`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(0);\r\n  });\r\n\r\n  test(`Solid floor`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\"),\r\n      `          `.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(1);\r\n  });\r\n\r\n  test(`Bounded floor`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##      ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(1);\r\n  });\r\n\r\n  test(`Zigzag`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `#  #   ###`.split(\"\"),\r\n      `#  # # ###`.split(\"\"),\r\n      `#  # # # #`.split(\"\"),\r\n      `#  # # # #`.split(\"\"),\r\n      `#  # #   #`.split(\"\"),\r\n      `#    ## ##`.split(\"\"),\r\n      `#    ## ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(1);\r\n  });\r\n\r\n  test(`Two rooms`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `#    #####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `####    ##`.split(\"\"),\r\n      `####    ##`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(2);\r\n  });\r\n\r\n  test(`Multiple rooms separated by boxes`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##  #     `.split(\"\"),\r\n      `##  $     `.split(\"\"),\r\n      `###$#     `.split(\"\"),\r\n      `##  ##$###`.split(\"\"),\r\n      `##  ##  ##`.split(\"\"),\r\n      `##  #$  ##`.split(\"\"),\r\n      `######  ##`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(4);\r\n  });\r\n\r\n  test(`Dots`, () => {\r\n    let matrix = new Matrix(10, 10, 3);\r\n    matrix.setAsArray([\r\n      `##########`.split(\"\"),\r\n      `### ######`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `##### ####`.split(\"\"),\r\n      `##########`.split(\"\"),\r\n      `#### #####`.split(\"\"),\r\n      `####### ##`.split(\"\"),\r\n      ` #########`.split(\"\"),\r\n      `### ######`.split(\"\"),\r\n      `##########`.split(\"\")\r\n    ]);\r\n\r\n    expect(matrix.findAvailablePlayerPositions().length).toBe(6);\r\n  });\r\n});\r\n"]}