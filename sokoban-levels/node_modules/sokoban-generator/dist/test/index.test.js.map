{"version":3,"sources":["../../test/index.test.js"],"names":["describe","test","options","seed","initialPosition","x","y","g1","g2","expect","not","toBe","type","get","toMatch","RegExp","minWalls","attempts","toBeNull","width","height","boxes"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;;;AAEAA,SAAS,SAAT,EAAoB,YAAM;AACxBC,OAAK,2BAAL,EAAkC,YAAM;AACtC,QAAIC,UAAU;AACZC,YAAiB,EADL;AAEZC,uBAAiB,EAACC,GAAG,CAAJ,EAAOC,GAAG,CAAV;AAFL,KAAd;;AAKA,QAAIC,KAAK,iCAAqBL,OAArB,CAAT;AACA,QAAIM,KAAK,iCAAqBN,OAArB,CAAT;;AAEAO,WAAOF,EAAP,EAAWG,GAAX,CAAeC,IAAf,CAAoB,IAApB;AACAF,WAAOF,EAAP,EAAWI,IAAX,CAAgBH,EAAhB;AACD,GAXD;;AAaAP,OAAK,uBAAL,EAA8B,YAAM;AAClC,QAAII,IAAI,CAAR;AACA,QAAIC,IAAI,CAAR;AACA,QAAIJ,UAAU;AACZC,YAAiB,EADL;AAEZC,uBAAiB,EAACC,IAAD,EAAIC,IAAJ,EAFL;AAGZM,YAAiB;AAHL,KAAd;;AAMA,QAAIL,KAAK,iCAAqBL,OAArB,CAAT;;AAEAO,WAAOF,GAAGM,GAAH,CAAOR,CAAP,EAAUC,CAAV,CAAP,EAAqBQ,OAArB,CAA6B,IAAIC,MAAJ,CAAW,kCAAX,CAA7B;AACD,GAZD;;AAcAd,OAAK,cAAL,EAAqB,YAAM;AACzB,QAAIC,UAAU;AACZc,gBAAU,EADE;AAEZC,gBAAU;AAFE,KAAd;;AAKAR,WAAO,iCAAqBP,OAArB,CAAP,EAAsCgB,QAAtC;AACD,GAPD;AAQD,CApCD;;AAsCAlB,SAAS,cAAT,EAAyB,YAAM;AAC7BC,OAAK,KAAL,EAAY,YAAM;AAChBQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGE,QADH;AAED,GAHD;;AAKAjB,OAAK,KAAL,EAAY,YAAM;AAChBQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGE,QADH;AAED,GAHD;;AAKAjB,OAAK,oBAAL,EAA2B,YAAM;AAC/BQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGE,QADH;AAED,GAHD;;AAKAjB,OAAK,KAAL,EAAY,YAAM;AAChBQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGN,GADH,CAEGQ,QAFH;AAGD,GAJD;;AAMAjB,OAAK,KAAL,EAAY,YAAM;AAChBQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGE,QADH;AAED,GAHD;;AAKAjB,OAAK,oBAAL,EAA2B,YAAM;AAC/BQ,WAAO,iCAAqB,EAACU,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAAsBC,OAAO,CAA7B,EAAgCL,UAAU,CAA1C,EAArB,CAAP,EACGE,QADH;AAED,GAHD;AAID,CA/BD","file":"index.test.js","sourcesContent":["import Grid from \"../src/grid\";\r\nimport {PLAYER, PLAYER_GOAL} from \"../src/tiles\";\r\nimport {generateSokobanLevel} from \"../index\";\r\nimport seedrandom from \"seedrandom\";\r\n\r\ndescribe(\"Options\", () => {\r\n  test(\"Same seed yields same map\", () => {\r\n    let options = {\r\n      seed           : 42,\r\n      initialPosition: {x: 3, y: 3},\r\n    };\r\n\r\n    let g1 = generateSokobanLevel(options);\r\n    let g2 = generateSokobanLevel(options);\r\n\r\n    expect(g1).not.toBe(null);\r\n    expect(g1).toBe(g2);\r\n  });\r\n\r\n  test(\"Fixes player position\", () => {\r\n    let x = 3;\r\n    let y = 3;\r\n    let options = {\r\n      seed           : 42,\r\n      initialPosition: {x, y},\r\n      type           : \"class\",\r\n    };\r\n\r\n    let g1 = generateSokobanLevel(options);\r\n\r\n    expect(g1.get(x, y)).toMatch(new RegExp(PLAYER + PLAYER_GOAL));\r\n  });\r\n\r\n  test(\"Sets minWall\", () => {\r\n    let options = {\r\n      minWalls: 99,\r\n      attempts: 1000,\r\n    };\r\n\r\n    expect(generateSokobanLevel(options)).toBeNull();\r\n  });\r\n});\r\n\r\ndescribe(\"Sanity check\", () => {\r\n  test(\"1x1\", () => {\r\n    expect(generateSokobanLevel({width: 1, height: 1, boxes: 1, minWalls: 0}))\r\n      .toBeNull();\r\n  });\r\n\r\n  test(\"1x2\", () => {\r\n    expect(generateSokobanLevel({width: 2, height: 1, boxes: 1, minWalls: 0}))\r\n      .toBeNull();\r\n  });\r\n\r\n  test(\"1x2 too many boxes\", () => {\r\n    expect(generateSokobanLevel({width: 2, height: 1, boxes: 5, minWalls: 0}))\r\n      .toBeNull();\r\n  });\r\n\r\n  test(\"1x3\", () => {\r\n    expect(generateSokobanLevel({width: 3, height: 2, boxes: 1, minWalls: 0}))\r\n      .not\r\n      .toBeNull();\r\n  });\r\n\r\n  test(\"2x2\", () => {\r\n    expect(generateSokobanLevel({width: 2, height: 2, boxes: 1, minWalls: 0}))\r\n      .toBeNull();\r\n  });\r\n\r\n  test(\"2x2 too many boxes\", () => {\r\n    expect(generateSokobanLevel({width: 2, height: 2, boxes: 5, minWalls: 0}))\r\n      .toBeNull();\r\n  });\r\n});"]}