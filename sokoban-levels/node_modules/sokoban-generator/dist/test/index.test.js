"use strict";

var _grid = require("../src/grid");

var _grid2 = _interopRequireDefault(_grid);

var _tiles = require("../src/tiles");

var _index = require("../index");

var _seedrandom = require("seedrandom");

var _seedrandom2 = _interopRequireDefault(_seedrandom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe("Options", function () {
  test("Same seed yields same map", function () {
    var options = {
      seed: 42,
      initialPosition: { x: 3, y: 3 }
    };

    var g1 = (0, _index.generateSokobanLevel)(options);
    var g2 = (0, _index.generateSokobanLevel)(options);

    expect(g1).not.toBe(null);
    expect(g1).toBe(g2);
  });

  test("Fixes player position", function () {
    var x = 3;
    var y = 3;
    var options = {
      seed: 42,
      initialPosition: { x: x, y: y },
      type: "class"
    };

    var g1 = (0, _index.generateSokobanLevel)(options);

    expect(g1.get(x, y)).toMatch(new RegExp(_tiles.PLAYER + _tiles.PLAYER_GOAL));
  });

  test("Sets minWall", function () {
    var options = {
      minWalls: 99,
      attempts: 1000
    };

    expect((0, _index.generateSokobanLevel)(options)).toBeNull();
  });
});

describe("Sanity check", function () {
  test("1x1", function () {
    expect((0, _index.generateSokobanLevel)({ width: 1, height: 1, boxes: 1, minWalls: 0 })).toBeNull();
  });

  test("1x2", function () {
    expect((0, _index.generateSokobanLevel)({ width: 2, height: 1, boxes: 1, minWalls: 0 })).toBeNull();
  });

  test("1x2 too many boxes", function () {
    expect((0, _index.generateSokobanLevel)({ width: 2, height: 1, boxes: 5, minWalls: 0 })).toBeNull();
  });

  test("1x3", function () {
    expect((0, _index.generateSokobanLevel)({ width: 3, height: 2, boxes: 1, minWalls: 0 })).not.toBeNull();
  });

  test("2x2", function () {
    expect((0, _index.generateSokobanLevel)({ width: 2, height: 2, boxes: 1, minWalls: 0 })).toBeNull();
  });

  test("2x2 too many boxes", function () {
    expect((0, _index.generateSokobanLevel)({ width: 2, height: 2, boxes: 5, minWalls: 0 })).toBeNull();
  });
});
//# sourceMappingURL=index.test.js.map