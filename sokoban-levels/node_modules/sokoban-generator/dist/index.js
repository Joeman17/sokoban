"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateSokobanLevel = generateSokobanLevel;

var _grid = require("./src/grid");

var _grid2 = _interopRequireDefault(_grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function generateSokobanLevel() {
  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _parameters$width = parameters.width,
      width = _parameters$width === undefined ? 9 : _parameters$width,
      _parameters$height = parameters.height,
      height = _parameters$height === undefined ? 9 : _parameters$height,
      _parameters$boxes = parameters.boxes,
      boxes = _parameters$boxes === undefined ? 3 : _parameters$boxes,
      _parameters$minWalls = parameters.minWalls,
      minWalls = _parameters$minWalls === undefined ? 13 : _parameters$minWalls,
      _parameters$attempts = parameters.attempts,
      attempts = _parameters$attempts === undefined ? 5000 : _parameters$attempts,
      _parameters$seed = parameters.seed,
      seed = _parameters$seed === undefined ? Date.now() : _parameters$seed,
      initialPosition = parameters.initialPosition,
      _parameters$type = parameters.type,
      type = _parameters$type === undefined ? "string" : _parameters$type;


  var grid = new _grid2.default(width, height, boxes, seed, minWalls, initialPosition);

  while (--attempts > 0) {
    if (!grid.applyTemplates() || !grid.isGoodCandidate() || !grid.redeployGoals() || !grid.generateFarthestBoxes()) {
      continue;
    }

    if (type === "string") {
      return grid.toReadableString();
    }

    if (type === "class") {
      return grid;
    }

    console.warn("sokoban-generator/generateSokobanLevel: Unrecognized value for key \"string\": " + type + ". It should be either \"string\" or \"class");
    return grid.toReadableString();
  }

  return null;
}
//# sourceMappingURL=index.js.map